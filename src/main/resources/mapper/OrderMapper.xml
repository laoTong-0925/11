<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.shopping.mapper.OrderMapper">

    <resultMap type="com.app.shopping.model.entity.Order" id="OrderMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="consignee" column="consignee" jdbcType="VARCHAR"/>
        <result property="commodityId" column="commodity_id" jdbcType="INTEGER"/>
        <result property="money" column="money" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="isDel" column="is_del" jdbcType="INTEGER"/>
        <result property="valid" column="valid" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="creatTime" column="creat_time" jdbcType="TIMESTAMP"/>
        <result property="exTime" column="ex_time" jdbcType="TIMESTAMP"/>
        <result property="isTicket" column="is_ticket" jdbcType="INTEGER"/>
        <result property="pay" column="pay" jdbcType="VARCHAR"/>
        <result property="properties" column="properties" jdbcType="VARCHAR"/>
        <result property="cSum" column="csum" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderMap">
        select
*        from shopping_t.order
        where id = #{id}
        AND is_del = 0
    </select>
    <select id="queryByState" resultMap="OrderMap">
        select *
        from shopping_t.order
        where state = #{state}
        AND is_del = 0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderMap">
        select *
        from shopping_t.order
        where is_del = 0
        limit #{offset}, #{limit}
    </select>
    <select id="queryCountByUserId" resultType="java.lang.Integer">
        select
          count(1)
        from shopping_t.order
        where user_id = #{usetId} and is_del = 0
    </select>
    <select id="findByStateAndUser" resultMap="OrderMap">
        select *
        from shopping_t.order
        where is_del = 0
        and state = #{state}
        and user_id = #{userId}
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="findByUser" resultMap="OrderMap">
        select *
        from shopping_t.order
        where is_del = 0
        and user_id = #{userId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="queryByStateAndId" resultMap="OrderMap">
        select *
        from shopping_t.order
        where state = #{state}
        AND is_del = 0
        and id in
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateStateAndPayByUserId">
        update shopping_t.order
        set state = #{state},pay = #{pay}
        where user_id = #{userId}
        and is_del = 0
        and id in
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrderMap">
        select
        * from shopping_t.order
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="consignee != null and consignee != ''">
                and consignee = #{consignee}
            </if>
            <if test="commodityId != null">
                and commodity_id = #{commodityId}
            </if>
            <if test="money != null and money != ''">
                and money = #{money}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="isDel != null">
                and is_del = #{isDel}
            </if>
            <if test="valid != null">
                and valid = #{valid}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="creatTime != null">
                and creat_time = #{creatTime}
            </if>
            <if test="exTime != null">
                and ex_time = #{exTime}
            </if>
            <if test="isTicket != null">
                and is_ticket = #{isTicket}
            </if>
            <if test="pay != null and pay != ''">
                and pay = #{pay}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into shopping_t.order(user_id, consignee, commodity_id, money, state, ex_time,csum,properties)
        values (#{userId}, #{consignee}, #{commodityId}, #{money}, #{state},  #{exTime} ,#{cSum}, #{properties})
    </insert>

    <update id="updateStateById">
        update shopping_t.order
        set stata = #{state}
        where id = #{id} AND is_del = 0
    </update>

    <!--通过主键修改数据-->
    <update id="update">
        update shopping_t.order
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="consignee != null and consignee != ''">
                consignee = #{consignee},
            </if>
            <if test="commodityId != null">
                commodity_id = #{commodityId},
            </if>
            <if test="money != null and money != ''">
                money = #{money},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="isDel != null">
                is_del = #{isDel},
            </if>
            <if test="valid != null">
                valid = #{valid},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="creatTime != null">
                creat_time = #{creatTime},
            </if>
            <if test="exTime != null">
                ex_time = #{exTime},
            </if>
            <if test="isTicket != null">
                is_ticket = #{isTicket},
            </if>
            <if test="pay != null and pay != ''">
                pay = #{pay},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from shopping_t.order where id = #{id}
    </delete>

    <update id="remove">
        update shopping_t.order
        set is_del = 1
        where id = #{id}
        AND is_del = 0
    </update>

    <update id="autoCancel">
        update shopping_t.order
        set state = #{state}
        where is_del = 0
        and id in
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

</mapper>